CREATE TABLE IF NOT EXISTS system_items
(
    id      VARCHAR PRIMARY KEY,
    url     VARCHAR,
    updated TIMESTAMP WITH TIME ZONE NOT NULL,
    parent  VARCHAR,
    type    VARCHAR                  NOT NULL,
    size    BIGINT
);

CREATE TABLE IF NOT EXISTS history
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_id VARCHAR,
    url     VARCHAR,
    updated TIMESTAMP WITH TIME ZONE NOT NULL,
    parent  VARCHAR,
    type    VARCHAR                  NOT NULL,
    size    BIGINT
);

CREATE INDEX IF NOT EXISTS history_index ON history (item_id, updated);

CREATE OR REPLACE FUNCTION write_history() RETURNS TRIGGER AS
'
    BEGIN
        INSERT INTO history (item_id, url, updated, parent, type, size)
        VALUES (NEW.id, NEW.url, NEW.updated, NEW.parent, NEW.type, NEW.size);
        RETURN NULL;
    END;
' LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS t_system_items ON system_items;

CREATE TRIGGER t_system_items
    AFTER INSERT OR UPDATE
    ON system_items
    FOR EACH ROW
EXECUTE PROCEDURE write_history();